version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "29092:29092"  # EXTERNAL порт для локальных приложений
      - "9092:9092"    # INTERNAL порт для Kafka UI
      - "9093:9093"    # CONTROLLER порт для KRaft
    environment:
      # KRaft Configuration
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_KRAFT_CLUSTER_ID: "Adksdfonds_sAdsf"

      # Listeners Configuration
      KAFKA_CFG_LISTENERS: "INTERNAL://:9092,EXTERNAL://:29092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"

      # Broker Settings
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_JMX_PORT: "9102"

      # Additional Settings
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 5s
      timeout: 5s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"  # Используем INTERNAL listener
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: "PLAINTEXT"
    depends_on:
      kafka:
        condition: service_healthy

  root:
    build:
      context: ./root
    container_name: root
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - safedeck-email-service
      - safedeck-encrypt-service
      - safedeck-llm

  safedeck-email-service:
    build:
      context: ./safedeck-email-service
    container_name: safedeck-email-service
    environment:
      MAIL: ${MAIL}
      PASSWORD: ${MAIL_PASSWORD}
      BOOTSTRAP_SERVERS : "kafka:9092"
    ports:
      - "8081:8080"
    depends_on:
      - kafka

  safedeck-encrypt-service:
    build:
      context: ./safedeck-encrypt-service
    container_name: safedeck-encrypt-service
    ports:
      - "8082:8080"

  safedeck-llm:
    build:
      context: ./safedeck-llm
    container_name: safedeck-llm
    ports:
      - "8083:8080"

# Если нужна база данных, раскомментируйте и настройте:
#  db:
#    image: postgres:17
#    container_name: db
#    environment:
#      POSTGRES_DB: safedeck
#      POSTGRES_USER: safedeck
#      POSTGRES_PASSWORD: safedeck
#    ports:
#      - "5432:5432"
#    volumes:
#      - db_data:/var/lib/postgresql/data
#
#volumes:
#  db_data: