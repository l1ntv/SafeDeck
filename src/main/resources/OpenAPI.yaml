openapi: 3.0.3
info:
  title: SafeDeck main module API
  description: API документация для основного модуля сервиса SafeDeck
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Локальный сервер

paths:
  /auth/register:
    post:
      summary: Регистрация нового пользователя
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationClientRequestDTO'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponseDTO'
        '400':
          description: Ошибка валидации или некорректные входные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '409':
          description: Конфликт — пользователь с таким email уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'

  /auth/login:
    post:
      summary: Аутентификация пользователя
      operationId: authenticateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequestDTO'
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponseDTO'
        '400':
          description: Ошибка валидации или некорректные входные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'

components:
  schemas:

    RegistrationClientRequestDTO:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          format: password
          example: securepassword123
        publicName:
          type: string
          example: JohnDoe
        IP:
          type: string
          example: 192.168.1.1
        country:
          type: string
          example: Russia
        provider:
          type: string
          example: Yandex
        device:
          type: string
          example: iPhone 13

    RegistrationResponseDTO:
      type: object
      properties:
        token:
          type: string
          description: JWT-токен, выданный после успешной регистрации
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxxxx

    AuthenticationRequestDTO:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          format: password
          example: securepassword123
        IP:
          type: string
          example: 192.168.1.1
        country:
          type: string
          example: Russia
        provider:
          type: string
          example: Google
        device:
          type: string
          example: Samsung Galaxy S22

    AuthenticationResponseDTO:
      type: object
      properties:
        token:
          type: string
          description: JWT-токен, выданный после успешной аутентификации
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxxxx

    ErrorResponseDTO:
      type: object
      properties:
        error:
          type: string
          example: "User with this email already exists."
        timestamp:
          type: string
          format: date-time
          example: "2025-04-05T12:34:56Z"